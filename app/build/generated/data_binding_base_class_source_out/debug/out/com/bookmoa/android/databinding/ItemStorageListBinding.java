// Generated by view binder compiler. Do not edit!
package com.bookmoa.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bookmoa.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStorageListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView itemBookListImgCarview;

  @NonNull
  public final ImageView itemBookListImgIv;

  @NonNull
  public final TextView itemBookListNumTv;

  @NonNull
  public final TextView itemBookListTitleTv;

  @NonNull
  public final ImageView myStorageListLockIcon;

  @NonNull
  public final ImageView myStorageListUnlockIcon;

  private ItemStorageListBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView itemBookListImgCarview, @NonNull ImageView itemBookListImgIv,
      @NonNull TextView itemBookListNumTv, @NonNull TextView itemBookListTitleTv,
      @NonNull ImageView myStorageListLockIcon, @NonNull ImageView myStorageListUnlockIcon) {
    this.rootView = rootView;
    this.itemBookListImgCarview = itemBookListImgCarview;
    this.itemBookListImgIv = itemBookListImgIv;
    this.itemBookListNumTv = itemBookListNumTv;
    this.itemBookListTitleTv = itemBookListTitleTv;
    this.myStorageListLockIcon = myStorageListLockIcon;
    this.myStorageListUnlockIcon = myStorageListUnlockIcon;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStorageListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStorageListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_storage_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStorageListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_book_list_img_carview;
      CardView itemBookListImgCarview = ViewBindings.findChildViewById(rootView, id);
      if (itemBookListImgCarview == null) {
        break missingId;
      }

      id = R.id.item_book_list_img_iv;
      ImageView itemBookListImgIv = ViewBindings.findChildViewById(rootView, id);
      if (itemBookListImgIv == null) {
        break missingId;
      }

      id = R.id.item_book_list_num_tv;
      TextView itemBookListNumTv = ViewBindings.findChildViewById(rootView, id);
      if (itemBookListNumTv == null) {
        break missingId;
      }

      id = R.id.item_book_list_title_tv;
      TextView itemBookListTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (itemBookListTitleTv == null) {
        break missingId;
      }

      id = R.id.myStorage_list_lock_icon;
      ImageView myStorageListLockIcon = ViewBindings.findChildViewById(rootView, id);
      if (myStorageListLockIcon == null) {
        break missingId;
      }

      id = R.id.myStorage_list_unlock_icon;
      ImageView myStorageListUnlockIcon = ViewBindings.findChildViewById(rootView, id);
      if (myStorageListUnlockIcon == null) {
        break missingId;
      }

      return new ItemStorageListBinding((ConstraintLayout) rootView, itemBookListImgCarview,
          itemBookListImgIv, itemBookListNumTv, itemBookListTitleTv, myStorageListLockIcon,
          myStorageListUnlockIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
