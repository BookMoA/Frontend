// Generated by view binder compiler. Do not edit!
package com.bookmoa.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bookmoa.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchTotalBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View searchTotalAuthorLine;

  @NonNull
  public final RecyclerView searchTotalAuthorRv;

  @NonNull
  public final LinearLayout searchTotalAuthorRvContainer;

  @NonNull
  public final TextView searchTotalAuthorTv;

  @NonNull
  public final View searchTotalBookListLine;

  @NonNull
  public final RecyclerView searchTotalBookListRv;

  @NonNull
  public final LinearLayout searchTotalBookListRvContainer;

  @NonNull
  public final TextView searchTotalBookListTv;

  @NonNull
  public final RecyclerView searchTotalMemoRv;

  @NonNull
  public final LinearLayout searchTotalMemoRvContainer;

  @NonNull
  public final TextView searchTotalMemoTv;

  @NonNull
  public final View searchTotalTitleLine;

  @NonNull
  public final RecyclerView searchTotalTitleRv;

  @NonNull
  public final LinearLayout searchTotalTitleRvContainer;

  @NonNull
  public final TextView searchTotalTitleTv;

  private FragmentSearchTotalBinding(@NonNull ConstraintLayout rootView,
      @NonNull View searchTotalAuthorLine, @NonNull RecyclerView searchTotalAuthorRv,
      @NonNull LinearLayout searchTotalAuthorRvContainer, @NonNull TextView searchTotalAuthorTv,
      @NonNull View searchTotalBookListLine, @NonNull RecyclerView searchTotalBookListRv,
      @NonNull LinearLayout searchTotalBookListRvContainer, @NonNull TextView searchTotalBookListTv,
      @NonNull RecyclerView searchTotalMemoRv, @NonNull LinearLayout searchTotalMemoRvContainer,
      @NonNull TextView searchTotalMemoTv, @NonNull View searchTotalTitleLine,
      @NonNull RecyclerView searchTotalTitleRv, @NonNull LinearLayout searchTotalTitleRvContainer,
      @NonNull TextView searchTotalTitleTv) {
    this.rootView = rootView;
    this.searchTotalAuthorLine = searchTotalAuthorLine;
    this.searchTotalAuthorRv = searchTotalAuthorRv;
    this.searchTotalAuthorRvContainer = searchTotalAuthorRvContainer;
    this.searchTotalAuthorTv = searchTotalAuthorTv;
    this.searchTotalBookListLine = searchTotalBookListLine;
    this.searchTotalBookListRv = searchTotalBookListRv;
    this.searchTotalBookListRvContainer = searchTotalBookListRvContainer;
    this.searchTotalBookListTv = searchTotalBookListTv;
    this.searchTotalMemoRv = searchTotalMemoRv;
    this.searchTotalMemoRvContainer = searchTotalMemoRvContainer;
    this.searchTotalMemoTv = searchTotalMemoTv;
    this.searchTotalTitleLine = searchTotalTitleLine;
    this.searchTotalTitleRv = searchTotalTitleRv;
    this.searchTotalTitleRvContainer = searchTotalTitleRvContainer;
    this.searchTotalTitleTv = searchTotalTitleTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchTotalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchTotalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_total, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchTotalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.search_total_author_line;
      View searchTotalAuthorLine = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalAuthorLine == null) {
        break missingId;
      }

      id = R.id.search_total_author_rv;
      RecyclerView searchTotalAuthorRv = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalAuthorRv == null) {
        break missingId;
      }

      id = R.id.search_total_author_rv_container;
      LinearLayout searchTotalAuthorRvContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalAuthorRvContainer == null) {
        break missingId;
      }

      id = R.id.search_total_author_tv;
      TextView searchTotalAuthorTv = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalAuthorTv == null) {
        break missingId;
      }

      id = R.id.search_total_book_list_line;
      View searchTotalBookListLine = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalBookListLine == null) {
        break missingId;
      }

      id = R.id.search_total_book_list_rv;
      RecyclerView searchTotalBookListRv = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalBookListRv == null) {
        break missingId;
      }

      id = R.id.search_total_book_list_rv_container;
      LinearLayout searchTotalBookListRvContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalBookListRvContainer == null) {
        break missingId;
      }

      id = R.id.search_total_book_list_tv;
      TextView searchTotalBookListTv = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalBookListTv == null) {
        break missingId;
      }

      id = R.id.search_total_memo_rv;
      RecyclerView searchTotalMemoRv = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalMemoRv == null) {
        break missingId;
      }

      id = R.id.search_total_memo_rv_container;
      LinearLayout searchTotalMemoRvContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalMemoRvContainer == null) {
        break missingId;
      }

      id = R.id.search_total_memo_tv;
      TextView searchTotalMemoTv = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalMemoTv == null) {
        break missingId;
      }

      id = R.id.search_total_title_line;
      View searchTotalTitleLine = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalTitleLine == null) {
        break missingId;
      }

      id = R.id.search_total_title_rv;
      RecyclerView searchTotalTitleRv = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalTitleRv == null) {
        break missingId;
      }

      id = R.id.search_total_title_rv_container;
      LinearLayout searchTotalTitleRvContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalTitleRvContainer == null) {
        break missingId;
      }

      id = R.id.search_total_title_tv;
      TextView searchTotalTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (searchTotalTitleTv == null) {
        break missingId;
      }

      return new FragmentSearchTotalBinding((ConstraintLayout) rootView, searchTotalAuthorLine,
          searchTotalAuthorRv, searchTotalAuthorRvContainer, searchTotalAuthorTv,
          searchTotalBookListLine, searchTotalBookListRv, searchTotalBookListRvContainer,
          searchTotalBookListTv, searchTotalMemoRv, searchTotalMemoRvContainer, searchTotalMemoTv,
          searchTotalTitleLine, searchTotalTitleRv, searchTotalTitleRvContainer,
          searchTotalTitleTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
