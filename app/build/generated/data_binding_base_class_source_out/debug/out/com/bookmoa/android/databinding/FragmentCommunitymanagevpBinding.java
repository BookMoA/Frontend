// Generated by view binder compiler. Do not edit!
package com.bookmoa.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bookmoa.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCommunitymanagevpBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView communitymanageQuitTv;

  @NonNull
  public final ImageView communitymanagevpCopyIv;

  @NonNull
  public final TextView communitymanagevpCopyTv;

  @NonNull
  public final EditText communitymanagevpIntroduceEt;

  @NonNull
  public final ImageView communitymanagevpIntroduceIv;

  @NonNull
  public final TextView communitymanagevpIntroduceTv;

  @NonNull
  public final TextView communitymanagevpMemberTv;

  @NonNull
  public final EditText communitymanagevpNoticeEt;

  @NonNull
  public final ImageView communitymanagevpNoticeIv;

  @NonNull
  public final TextView communitymanagevpNoticeTv;

  private FragmentCommunitymanagevpBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView communitymanageQuitTv, @NonNull ImageView communitymanagevpCopyIv,
      @NonNull TextView communitymanagevpCopyTv, @NonNull EditText communitymanagevpIntroduceEt,
      @NonNull ImageView communitymanagevpIntroduceIv,
      @NonNull TextView communitymanagevpIntroduceTv, @NonNull TextView communitymanagevpMemberTv,
      @NonNull EditText communitymanagevpNoticeEt, @NonNull ImageView communitymanagevpNoticeIv,
      @NonNull TextView communitymanagevpNoticeTv) {
    this.rootView = rootView;
    this.communitymanageQuitTv = communitymanageQuitTv;
    this.communitymanagevpCopyIv = communitymanagevpCopyIv;
    this.communitymanagevpCopyTv = communitymanagevpCopyTv;
    this.communitymanagevpIntroduceEt = communitymanagevpIntroduceEt;
    this.communitymanagevpIntroduceIv = communitymanagevpIntroduceIv;
    this.communitymanagevpIntroduceTv = communitymanagevpIntroduceTv;
    this.communitymanagevpMemberTv = communitymanagevpMemberTv;
    this.communitymanagevpNoticeEt = communitymanagevpNoticeEt;
    this.communitymanagevpNoticeIv = communitymanagevpNoticeIv;
    this.communitymanagevpNoticeTv = communitymanagevpNoticeTv;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCommunitymanagevpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCommunitymanagevpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_communitymanagevp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCommunitymanagevpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.communitymanage_quit_tv;
      TextView communitymanageQuitTv = ViewBindings.findChildViewById(rootView, id);
      if (communitymanageQuitTv == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_copy_iv;
      ImageView communitymanagevpCopyIv = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpCopyIv == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_copy_tv;
      TextView communitymanagevpCopyTv = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpCopyTv == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_introduce_et;
      EditText communitymanagevpIntroduceEt = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpIntroduceEt == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_introduce_iv;
      ImageView communitymanagevpIntroduceIv = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpIntroduceIv == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_introduce_tv;
      TextView communitymanagevpIntroduceTv = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpIntroduceTv == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_member_tv;
      TextView communitymanagevpMemberTv = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpMemberTv == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_notice_et;
      EditText communitymanagevpNoticeEt = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpNoticeEt == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_notice_iv;
      ImageView communitymanagevpNoticeIv = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpNoticeIv == null) {
        break missingId;
      }

      id = R.id.communitymanagevp_notice_tv;
      TextView communitymanagevpNoticeTv = ViewBindings.findChildViewById(rootView, id);
      if (communitymanagevpNoticeTv == null) {
        break missingId;
      }

      return new FragmentCommunitymanagevpBinding((NestedScrollView) rootView,
          communitymanageQuitTv, communitymanagevpCopyIv, communitymanagevpCopyTv,
          communitymanagevpIntroduceEt, communitymanagevpIntroduceIv, communitymanagevpIntroduceTv,
          communitymanagevpMemberTv, communitymanagevpNoticeEt, communitymanagevpNoticeIv,
          communitymanagevpNoticeTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
