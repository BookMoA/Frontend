// Generated by view binder compiler. Do not edit!
package com.bookmoa.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bookmoa.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button2;

  @NonNull
  public final ConstraintLayout cstFocus;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final ImageView imageView15;

  @NonNull
  public final ImageView imageView16;

  @NonNull
  public final ImageView imageView17;

  @NonNull
  public final ImageView imageView181;

  @NonNull
  public final ImageView imageView6;

  @NonNull
  public final ImageView imgAddBook1;

  @NonNull
  public final ImageView imgBook11;

  @NonNull
  public final ImageView imgBook21;

  @NonNull
  public final ImageView imgBook31;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView25;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final ConstraintLayout user;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull Button button2,
      @NonNull ConstraintLayout cstFocus, @NonNull HorizontalScrollView horizontalScrollView,
      @NonNull ImageView imageView15, @NonNull ImageView imageView16,
      @NonNull ImageView imageView17, @NonNull ImageView imageView181,
      @NonNull ImageView imageView6, @NonNull ImageView imgAddBook1, @NonNull ImageView imgBook11,
      @NonNull ImageView imgBook21, @NonNull ImageView imgBook31,
      @NonNull LinearLayout linearLayout, @NonNull SeekBar seekBar, @NonNull TextView textView13,
      @NonNull TextView textView14, @NonNull TextView textView15, @NonNull TextView textView25,
      @NonNull TextView textView8, @NonNull TextView textView9, @NonNull ConstraintLayout user) {
    this.rootView = rootView;
    this.button2 = button2;
    this.cstFocus = cstFocus;
    this.horizontalScrollView = horizontalScrollView;
    this.imageView15 = imageView15;
    this.imageView16 = imageView16;
    this.imageView17 = imageView17;
    this.imageView181 = imageView181;
    this.imageView6 = imageView6;
    this.imgAddBook1 = imgAddBook1;
    this.imgBook11 = imgBook11;
    this.imgBook21 = imgBook21;
    this.imgBook31 = imgBook31;
    this.linearLayout = linearLayout;
    this.seekBar = seekBar;
    this.textView13 = textView13;
    this.textView14 = textView14;
    this.textView15 = textView15;
    this.textView25 = textView25;
    this.textView8 = textView8;
    this.textView9 = textView9;
    this.user = user;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.cstFocus;
      ConstraintLayout cstFocus = ViewBindings.findChildViewById(rootView, id);
      if (cstFocus == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.imageView15;
      ImageView imageView15 = ViewBindings.findChildViewById(rootView, id);
      if (imageView15 == null) {
        break missingId;
      }

      id = R.id.imageView16;
      ImageView imageView16 = ViewBindings.findChildViewById(rootView, id);
      if (imageView16 == null) {
        break missingId;
      }

      id = R.id.imageView17;
      ImageView imageView17 = ViewBindings.findChildViewById(rootView, id);
      if (imageView17 == null) {
        break missingId;
      }

      id = R.id.imageView181;
      ImageView imageView181 = ViewBindings.findChildViewById(rootView, id);
      if (imageView181 == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      id = R.id.imgAddBook1;
      ImageView imgAddBook1 = ViewBindings.findChildViewById(rootView, id);
      if (imgAddBook1 == null) {
        break missingId;
      }

      id = R.id.imgBook11;
      ImageView imgBook11 = ViewBindings.findChildViewById(rootView, id);
      if (imgBook11 == null) {
        break missingId;
      }

      id = R.id.imgBook21;
      ImageView imgBook21 = ViewBindings.findChildViewById(rootView, id);
      if (imgBook21 == null) {
        break missingId;
      }

      id = R.id.imgBook31;
      ImageView imgBook31 = ViewBindings.findChildViewById(rootView, id);
      if (imgBook31 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView25;
      TextView textView25 = ViewBindings.findChildViewById(rootView, id);
      if (textView25 == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.user;
      ConstraintLayout user = ViewBindings.findChildViewById(rootView, id);
      if (user == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, button2, cstFocus,
          horizontalScrollView, imageView15, imageView16, imageView17, imageView181, imageView6,
          imgAddBook1, imgBook11, imgBook21, imgBook31, linearLayout, seekBar, textView13,
          textView14, textView15, textView25, textView8, textView9, user);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
