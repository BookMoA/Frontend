// Generated by view binder compiler. Do not edit!
package com.bookmoa.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bookmoa.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBookListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout searchBookListAvailable;

  @NonNull
  public final ConstraintLayout searchBookListNotAvailable;

  @NonNull
  public final RecyclerView searchBookListRv;

  @NonNull
  public final TextView searchBookListTv;

  private FragmentSearchBookListBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout searchBookListAvailable,
      @NonNull ConstraintLayout searchBookListNotAvailable, @NonNull RecyclerView searchBookListRv,
      @NonNull TextView searchBookListTv) {
    this.rootView = rootView;
    this.searchBookListAvailable = searchBookListAvailable;
    this.searchBookListNotAvailable = searchBookListNotAvailable;
    this.searchBookListRv = searchBookListRv;
    this.searchBookListTv = searchBookListTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBookListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBookListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_book_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBookListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.search_book_list_available;
      ConstraintLayout searchBookListAvailable = ViewBindings.findChildViewById(rootView, id);
      if (searchBookListAvailable == null) {
        break missingId;
      }

      id = R.id.search_book_list_not_available;
      ConstraintLayout searchBookListNotAvailable = ViewBindings.findChildViewById(rootView, id);
      if (searchBookListNotAvailable == null) {
        break missingId;
      }

      id = R.id.search_book_list_rv;
      RecyclerView searchBookListRv = ViewBindings.findChildViewById(rootView, id);
      if (searchBookListRv == null) {
        break missingId;
      }

      id = R.id.search_book_list_tv;
      TextView searchBookListTv = ViewBindings.findChildViewById(rootView, id);
      if (searchBookListTv == null) {
        break missingId;
      }

      return new FragmentSearchBookListBinding((ConstraintLayout) rootView, searchBookListAvailable,
          searchBookListNotAvailable, searchBookListRv, searchBookListTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
