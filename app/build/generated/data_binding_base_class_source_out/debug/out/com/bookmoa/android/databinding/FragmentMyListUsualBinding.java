// Generated by view binder compiler. Do not edit!
package com.bookmoa.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bookmoa.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyListUsualBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView myListRv;

  @NonNull
  public final LinearLayout wantToReadAddList;

  @NonNull
  public final TextView wantToReadAddListText;

  @NonNull
  public final TextView wantToReadEdit;

  private FragmentMyListUsualBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView myListRv, @NonNull LinearLayout wantToReadAddList,
      @NonNull TextView wantToReadAddListText, @NonNull TextView wantToReadEdit) {
    this.rootView = rootView;
    this.myListRv = myListRv;
    this.wantToReadAddList = wantToReadAddList;
    this.wantToReadAddListText = wantToReadAddListText;
    this.wantToReadEdit = wantToReadEdit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyListUsualBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyListUsualBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_list_usual, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyListUsualBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.my_list_rv;
      RecyclerView myListRv = ViewBindings.findChildViewById(rootView, id);
      if (myListRv == null) {
        break missingId;
      }

      id = R.id.wantToRead_addList;
      LinearLayout wantToReadAddList = ViewBindings.findChildViewById(rootView, id);
      if (wantToReadAddList == null) {
        break missingId;
      }

      id = R.id.wantToRead_addList_text;
      TextView wantToReadAddListText = ViewBindings.findChildViewById(rootView, id);
      if (wantToReadAddListText == null) {
        break missingId;
      }

      id = R.id.wantToRead_edit;
      TextView wantToReadEdit = ViewBindings.findChildViewById(rootView, id);
      if (wantToReadEdit == null) {
        break missingId;
      }

      return new FragmentMyListUsualBinding((ConstraintLayout) rootView, myListRv,
          wantToReadAddList, wantToReadAddListText, wantToReadEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
