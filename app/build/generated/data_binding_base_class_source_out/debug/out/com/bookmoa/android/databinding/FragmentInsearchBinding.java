// Generated by view binder compiler. Do not edit!
package com.bookmoa.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.bookmoa.android.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInsearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView insearchBackIv;

  @NonNull
  public final SearchView insearchSv;

  @NonNull
  public final TabLayout insearchTl;

  @NonNull
  public final ViewPager2 insearchVp;

  private FragmentInsearchBinding(@NonNull LinearLayout rootView, @NonNull ImageView insearchBackIv,
      @NonNull SearchView insearchSv, @NonNull TabLayout insearchTl,
      @NonNull ViewPager2 insearchVp) {
    this.rootView = rootView;
    this.insearchBackIv = insearchBackIv;
    this.insearchSv = insearchSv;
    this.insearchTl = insearchTl;
    this.insearchVp = insearchVp;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInsearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInsearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_insearch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInsearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.insearch_back_iv;
      ImageView insearchBackIv = ViewBindings.findChildViewById(rootView, id);
      if (insearchBackIv == null) {
        break missingId;
      }

      id = R.id.insearch_sv;
      SearchView insearchSv = ViewBindings.findChildViewById(rootView, id);
      if (insearchSv == null) {
        break missingId;
      }

      id = R.id.insearch_tl;
      TabLayout insearchTl = ViewBindings.findChildViewById(rootView, id);
      if (insearchTl == null) {
        break missingId;
      }

      id = R.id.insearch_vp;
      ViewPager2 insearchVp = ViewBindings.findChildViewById(rootView, id);
      if (insearchVp == null) {
        break missingId;
      }

      return new FragmentInsearchBinding((LinearLayout) rootView, insearchBackIv, insearchSv,
          insearchTl, insearchVp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
